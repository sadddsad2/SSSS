name: IDX-Keepalive 2小时
on:
  schedule:
    # Beijing time is UTC+8, schedule in UTC
    # Run at 6:00, 7:00 北京时间
    - cron: '0 22,23 * * *'
  # Manual trigger option
  workflow_dispatch:

jobs:
  keepalive:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Restore latest cookies cache
      id: cache-cookies-restore
      uses: actions/cache/restore@v3
      with:
        path: google_cookies.json
        key: google_cookies-restore-attempt-${{ runner.os }}
        restore-keys: |
          google_cookies-
    
    - name: Check if cache was found
      id: check-cache
      run: |
        if [ -f "google_cookies.json" ]; then
          echo "CACHE_HIT=true" >> $GITHUB_OUTPUT
          echo "Using cached cookies file"
        else
          echo "CACHE_HIT=false" >> $GITHUB_OUTPUT
          echo "No cached cookies found"
        fi
    
    - name: Download Google Cookies
      if: steps.check-cache.outputs.CACHE_HIT != 'true'
      run: |
        curl -s -L "${{ secrets.COOK_URL }}" -o google_cookies.json
        if [ -f google_cookies.json ]; then
          echo "Downloaded google_cookies.json successfully"
        else
          echo "Error: Failed to download google_cookies.json"
          exit 1
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Restore pip cache
      id: cache-pip
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Restore Playwright cache
      id: cache-playwright
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
          
    - name: Create playwright.version file if not exists
      run: |
        if [ ! -f "playwright.version" ]; then
          playwright_version=$(pip show playwright 2>/dev/null | grep Version | cut -d ' ' -f 2 || echo "1.34.0")
          echo "$playwright_version" > playwright.version
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
        # Always install playwright explicitly to ensure it's available
        pip install playwright
        
        # Install from requirements.txt if it exists
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        
        # Verify playwright is installed correctly
        python -c "import playwright; print('Playwright successfully imported')"
        
        # Only install Playwright browsers if cache doesn't exist
        if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != 'true' ]; then
          echo "Installing Playwright browsers..."
          python -m playwright install firefox
        else
          echo "Using cached Playwright browsers"
        fi
      
    - name: Run Python Script
      env:
        GOOGLE_PW: ${{ secrets.GOOGLE_PW }}
        APP_URL: ${{ secrets.APP_URL }}
        WEB_URL: ${{ secrets.WEB_URL }}
        PYTHONPATH: $PYTHONPATH:$(pwd)
      run: |
        # Print Python environment info for debugging
        which python
        python -V
        echo "PYTHONPATH: $PYTHONPATH"
        
        # Verify modules are accessible
        python -m pip list | grep playwright
        
        # Run the script with explicit Python path
        python -m main
        
    - name: Get current timestamp for cookie cache key
      id: timestamp_generator
      run: echo "CACHE_TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
      
    - name: Save cookies cache with timestamp
      uses: actions/cache/save@v3
      with:
        path: google_cookies.json
        key: google_cookies-${{ steps.timestamp_generator.outputs.CACHE_TIMESTAMP }}
        
    - name: Save pip cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Save Playwright cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
